{"version":3,"sources":["Components/Home.tsx","helpers/api.tsx","Components/PersonRow.tsx","Components/PeopleTable.tsx","Components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Home","getPeople","a","fetch","res","json","PersonRow","people","history","useHistory","personSlug","useParams","map","person","className","cn","slug","key","id","onClick","personUrl","push","pathname","scope","name","person__male","sex","person__female","born","died","motherName","fatherName","PeopleTable","useState","setPeople","location","useLocation","searchParams","URLSearchParams","search","query","get","sortBy","visibleQuery","setVisibleQuery","useEffect","peopleFromServer","i","preparePeople","updateQuery","useCallback","debounce","newQuery","set","delete","toString","handleSetSort","newSortMode","includes","sort","b","localeCompare","visiblePeople","useMemo","pattern","filter","toLocaleLowerCase","trim","type","value","onChange","e","currentTarget","header","abbr","PeoplePage","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb884ddf.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Home = () => (\n  <h1>Home page</h1>\n);\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const res = await fetch(API_URL);\n\n  return res.json();\n};\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonRow: React.FC<Props> = ({ people }) => {\n  const history = useHistory();\n  const { personSlug } = useParams();\n\n  const handleSelectPerson = (personUrl: string) => {\n    history.push({\n      pathname: `/people/${personUrl}`,\n    });\n  };\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <tr\n          className={cn('person', {\n            'table-active': person.slug === personSlug,\n          })}\n          key={person.id}\n          onClick={() => handleSelectPerson(person.slug)}\n        >\n          <th scope=\"row\">{person.id}</th>\n          <td>{person.name}</td>\n          <td className={cn({\n            person__male: person.sex === 'm',\n            person__female: person.sex === 'f',\n          })}\n          >\n            {person.sex}\n          </td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td className=\"person__female\">{person.motherName}</td>\n          <td className=\"person__male\">{person.fatherName}</td>\n        </tr>\n      ))}\n    </>\n  );\n};\n","import React, {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport cn from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const [visibleQuery, setVisibleQuery] = useState(query);\n\n  useEffect(() => {\n    const preparePeople = async () => {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer.map((person: Person, i: number) => ({\n        ...person,\n        id: i + 1,\n      })));\n    };\n\n    preparePeople();\n  }, []);\n\n  const filtredPeople = (peopleList: Person[], pattern: string) => (\n    peopleList.filter((person: Person) => (\n      (`${person.name} ${person.motherName} ${person.fatherName}`)\n        .toLocaleLowerCase()\n        .includes(pattern.toLocaleLowerCase().trim())\n    ))\n  );\n\n  const updateQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 500),\n    [],\n  );\n\n  const handleQueryUpdate = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n\n    setVisibleQuery(value);\n    updateQuery(value);\n  };\n\n  useEffect(\n    () => setVisibleQuery(query),\n    [query],\n  );\n\n  const handleSetSort = (newSortMode: string) => {\n    const headers = ['born', 'died', 'name', 'sex'];\n\n    if (headers.includes(newSortMode)) {\n      searchParams.set('sortBy', newSortMode);\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n\n    switch (newSortMode) {\n      case 'born': setPeople([...people].sort((a, b) => +a.born - +b.born)); break;\n      case 'died': setPeople([...people].sort((a, b) => +a.died - +b.died)); break;\n      case 'name': setPeople([...people].sort((a, b) => a.name.localeCompare(b.name))); break;\n      case 'sex': setPeople([...people].sort((a, b) => b.sex.localeCompare(a.sex))); break;\n      default: setPeople(people);\n    }\n  };\n\n  useEffect(\n    () => handleSetSort(sortBy),\n    [sortBy],\n  );\n\n  const visiblePeople = useMemo(\n    () => filtredPeople(people, query),\n    [people, query],\n  );\n\n  const headers = ['id', 'name', 'sex', 'born', 'died', 'mother', 'father'];\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={visibleQuery}\n        onChange={handleQueryUpdate}\n      />\n      <table className=\"PeopleTable table\">\n        <thead>\n          <tr className=\"thead-light\">\n            {headers.map(header => (\n              <th\n                scope=\"col\"\n                className={cn({\n                  'bg-info': searchParams.get('sortBy') === header,\n                })}\n                abbr={header}\n                key={header}\n                onClick={() => handleSetSort(header)}\n              >\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={visiblePeople} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h2>People page</h2>\n      <PeopleTable />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Route, Switch, NavLink, Redirect,\n} from 'react-router-dom';\nimport { Home } from './Components/Home';\nimport { PeoplePage } from './Components/PeoplePage';\n\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n              Home page\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/people\"\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n              People page\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n      <>\n        <h2>Page not found</h2>\n      </>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}