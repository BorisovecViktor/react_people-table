{"version":3,"sources":["Components/Home.tsx","helpers/api.tsx","Components/PersonRow.tsx","Components/PeopleTable.tsx","Components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Home","getPeople","a","fetch","res","json","PersonRow","people","personSlug","useParams","location","useLocation","history","useHistory","map","person","className","cn","slug","key","id","scope","type","onClick","push","pathname","search","name","person__male","sex","person__female","born","died","mother","motherName","father","fatherName","PeopleTable","useState","setPeople","searchParams","URLSearchParams","query","useMemo","get","sortBy","sortOrder","visibleQuery","setVisibleQuery","useEffect","peopleFromServer","i","find","preparePeople","updateQueryUrl","useCallback","debounce","value","visiblePeople","pattern","filter","toLocaleLowerCase","includes","trim","sort","b","localeCompare","onChange","e","currentTarget","set","delete","toString","header","abbr","newSortMode","sortOrderToggle","handleSort","width","height","viewBox","fill","xmlns","d","PeoplePage","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d619340a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Home = () => (\n  <h1>Home page</h1>\n);\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const res = await fetch(API_URL);\n\n  return res.json();\n};\n","import React from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonRow: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <tr\n          className={cn('person', {\n            'table-active': person.slug === personSlug,\n          })}\n          key={person.id}\n        >\n          <th scope=\"row\">{person.id}</th>\n          <td>\n            <button\n              type=\"button\"\n              onClick={() => {\n                history.push({\n                  pathname: `/people/${person.slug}`,\n                  search: location.search,\n                });\n              }}\n            >\n              {person.name}\n            </button>\n          </td>\n          <td className={cn({\n            person__male: person.sex === 'm',\n            person__female: person.sex === 'f',\n          })}\n          >\n            {person.sex}\n          </td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>\n            {person.mother\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"person__female\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `/people/${person.mother?.slug}`,\n                      search: location.search,\n                    });\n                  }}\n                >\n                  {person.motherName}\n                </button>\n              ) : (\n                <span>\n                  {person.motherName}\n                </span>\n              )}\n          </td>\n          <td>\n            {person.mother\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"person__male\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `/people/${person.father?.slug}`,\n                      search: location.search,\n                    });\n                  }}\n                >\n                  {person.fatherName}\n                </button>\n              ) : (\n                <span>\n                  {person.fatherName}\n                </span>\n              )}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n","import React, {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport cn from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = useMemo(() => searchParams.get('query') || '', [searchParams]);\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder') || '', [searchParams]);\n  const [visibleQuery, setVisibleQuery] = useState(query);\n\n  useEffect(() => {\n    const preparePeople = async () => {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer.map((person: Person, i: number) => ({\n        ...person,\n        id: i + 1,\n        mother: peopleFromServer\n          .find((mother: PersonFromServer) => mother.name === person.motherName),\n        father: peopleFromServer\n          .find((father: PersonFromServer) => father.name === person.fatherName),\n      })));\n    };\n\n    preparePeople();\n  }, []);\n\n  const filtredPeople = (peopleList: Person[], pattern: string) => (\n    peopleList.filter((person: Person) => (\n      (`${person.name} ${person.motherName} ${person.fatherName}`)\n        .toLocaleLowerCase()\n        .includes(pattern.toLocaleLowerCase().trim())\n    ))\n  );\n\n  const updateQueryUrl = useCallback(\n    debounce((value: string) => {\n      history.push({ search: value });\n    }, 500),\n    [],\n  );\n\n  const handleSearch = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n\n    if (value) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    updateQueryUrl(searchParams.toString());\n    setVisibleQuery(value);\n  };\n\n  const handleSort = (newSortMode: string) => {\n    const headers = ['born', 'died', 'name', 'sex'];\n    const sortOrderToggle = sortOrder === 'asc' ? 'desc' : 'asc';\n\n    if (headers.includes(newSortMode)) {\n      searchParams.set('sortBy', newSortMode);\n      searchParams.set('sortOrder', sortOrderToggle);\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  };\n\n  const visiblePeople = useMemo(\n    () => filtredPeople(people, query),\n    [people, query],\n  );\n\n  useMemo(\n    () => setVisibleQuery(query),\n    [query],\n  );\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'desc':\n        switch (sortBy) {\n          case 'born':\n          case 'died':\n            visiblePeople.sort((a, b) => b[sortBy] - a[sortBy]); break;\n          case 'name':\n          case 'sex':\n            visiblePeople.sort((a, b) => b[sortBy].localeCompare(a[sortBy])); break;\n          default:\n        }\n\n        break;\n      case 'asc':\n        switch (sortBy) {\n          case 'born':\n          case 'died':\n            visiblePeople.sort((a, b) => a[sortBy] - b[sortBy]); break;\n          case 'name':\n          case 'sex':\n            visiblePeople.sort((a, b) => a[sortBy].localeCompare(b[sortBy])); break;\n          default:\n        }\n\n        break;\n      default:\n    }\n  }, [visiblePeople, sortOrder, sortBy]);\n\n  const headers = ['id', 'name', 'sex', 'born', 'died', 'mother', 'father'];\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={visibleQuery}\n        onChange={handleSearch}\n      />\n      <table className=\"PeopleTable table\">\n        <thead>\n          <tr className=\"thead-light\">\n            {headers.map(header => (\n              <th\n                scope=\"col\"\n                className={cn({\n                  'bg-info': searchParams.get('sortBy') === header,\n                })}\n                abbr={header}\n                key={header}\n                onClick={() => handleSort(header)}\n              >\n                {searchParams.get('sortBy') === header\n                  && (sortOrder === 'asc'\n                    ? (\n                      <svg className=\"bi bi-caret-up-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n                      </svg>\n                    )\n                    : (\n                      <svg className=\"bi bi-caret-down-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n                      </svg>\n                    ))}\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={visiblePeople} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h2>People page</h2>\n      <PeopleTable />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Route, Switch, NavLink, Redirect,\n} from 'react-router-dom';\nimport { Home } from './Components/Home';\nimport { PeoplePage } from './Components/PeoplePage';\n\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n              Home page\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/people\"\n              className=\"nav__link\"\n              activeClassName=\"nav__link--active\"\n            >\n              People page\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n      <>\n        <h2>Page not found</h2>\n      </>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}